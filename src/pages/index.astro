---
import Layout from "../layouts/Layout.astro";
---

<script is:inline>
	document.addEventListener("DOMContentLoaded", function () {
		const closeButton = document.getElementById("closeModalButton");

		if (closeButton) {
			closeButton.addEventListener("click", function (e) {
				e.preventDefault(); // Prevent default button action if needed
				console.log("Close button clicked");
				closeModal(); // Call your closeModal function
			});
		} else {
			console.error("Button with ID 'closeModal' not found");
		}
	});
	function closeModal() {
		const infoModalInicial = document.getElementById("infoModalInicial");
		if (infoModalInicial) {
			console.log("Closing modal");
			infoModalInicial.classList.add("hidden");
			// Or use your custom classes:
			// infoModalInicial.classList.remove("modal-visible");
			// infoModalInicial.classList.add("modal-hidden");
		} else {
			console.error("Element with ID 'infoModalInicial' not found");
		}
		// Call playGif() if needed
		playGif();
	}
</script>
<Layout title="Spooky Hackaton">
	<main class="lg:overflow-hidden">
		<div class="relative h-screen w-screen">
			<!--Animaciones -->
			<div id="animatorContainer" class="absolute inset-0 z-40">
				<img
					id="ghostAnimation"
					alt="Ghost Animation 1"
					class="w-full h-full object-cover"
				/>
			</div>
			<div id="animatorContainer2" class="absolute inset-0 z-40 hidden">
				<img
					id="ghostAnimation2"
					alt="Ghost Animation 2"
					class="w-full h-full object-cover"
				/>
			</div>
			<div id="ghostAnimation3" class="absolute inset-0 z-50 hidden">
				<img
					alt="Ghost Animation 3"
					src="/animations/transition_ghost.gif"
					class="w-full h-full object-cover"
				/>
			</div>
			<!-- Bottom layer -->
			<div class="absolute inset-0 z-0">
				<div class="moon"></div>
			</div>
			<!-- Second layer -->
			<div
				class="absolute inset-0 z-10 bg-[url('/img/ui/backgrounds/composition_index/3.png')] bg-cover bg-left lg:bg-center bg-no-repeat"
			>
			</div>
			<div
				class="absolute inset-0 z-10 bg-[url('/img/ui/backgrounds/composition_index/3.png')] bg-cover bg-left lg:bg-center bg-no-repeat"
			>
			</div>
			<!-- Third layer -->
			<div class="absolute inset-0 z-20">
				<div id="foglayer_01" class="fog hidden lg:flex">
					<div class="image01"></div>
					<div class="image02"></div>
				</div>
				<div id="foglayer_02" class="fog hidden lg:flex">
					<div class="image01"></div>
					<div class="image02"></div>
				</div>
				<div id="foglayer_03" class="fog hidden lg:flex">
					<div class="image01"></div>
					<div class="image02"></div>
				</div>
			</div>
			<!--Fourth layer -->
			<div
				transition:name="grave"
				class="absolute inset-0 z-30 bg-[url('/img/ui/backgrounds/composition_index/2.png')] bg-cover bg-left lg:bg-center bg-no-repeat"
			>
			</div>
			<!--Fifth layer -->
			<div
				class="absolute inset-0 z-40 bg-[url('/img/ui/backgrounds/composition_index/1.png')] bg-cover bg-left lg:bg-center bg-no-repeat"
			>
			</div>
			<!--Front layer -->
			<div id="titleContent" class="absolute inset-0 z-50">
				<section
					id="title"
					class="flex flex-col items-center justify-center h-screen animate-bouncing animate-iteration-count-infinite animate-duration-1000"
				>
					<h1
						class="fuente-creepster font-extralight text-7xl lg:text-9xl tracking-widest mx-auto text-trickle-purple text-green-glow"
					>
						Spooky Hackaton
					</h1>
					<h2
						class="text-white fuente-urbanist font-extralight text-2xl lg:text-4xl tracking-widest mx-auto lg:pt-8 uppercase"
					>
						- Trick or death -
					</h2>
					<button
						id="startButton"
						onclick="changePage();"
						;
						class="relative px-14 py-5 mt-8 lg:mt-24 text-black rounded-xl hover:animate-horizontal-vibration hover:animate-duration-fast hover:animate-iteration-count-infinite fuente-urbanist text-xl lg:text-2xl font-bold tracking-widest"
					>
						<div
							class="absolute inset-0 bg-[url('/img/ui/grave_texture_3.png')] bg-contain bg-no-repeat rounded-3xl object-green-glow my-auto mx-auto mb-1 lg:mr-2"
						>
						</div>
						<span class="relative graven-text">Empezar </span>
					</button>
				</section>
			</div>
		</div>
	</main>
</Layout>

<div
	id="infoModalInicial"
	class="fixed inset-0 modal z-50 flex items-center justify-center animate-fade-in-up animate-duration-1000 p-4"
>
	<div class="absolute inset-0 bg-black bg-opacity-50"></div>

	<div class="relative w-[60vw] max-w-[1250px] max-h-[90vh]">
		<img
			class="w-full h-auto"
			src="/img/ui/grave_texture_1.png"
			alt="Background"
		/>
		<div
			class="absolute inset-0 overflow-auto p-4 sm:p-6 md:p-8 lg:p-12 text-white"
		>
			<div
				class="relative z-10 max-w-[80%] flex flex-col justify-center mt-16 mx-auto"
			>
				<h2
					class="text-xl sm:text-2xl md:text-3xl lg:text-4xl fuente-handwritte font-bold mb-4"
				>
					Aconsejamos
				</h2>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					1) Utilizar el modo kiosko para una mejor experiencia
				</p>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					2) Una resolucion de 1920x1080 con aspecto de 16:9
				</p>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					3) Paciencia, usamos Cloudinary y las peticiones de imágenes
					y subidas fallan algunas veces. Puedes pulsar F5 o recargar
					la página.
				</p>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					4) Jugar la historia varias veces con distintas decisiones.
				</p>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					5) Subir las fotos en aspecto 1:1 o verticales con la
					persona centrada en la imagen y fondo visible.
				</p>
				<h2
					class="text-xl sm:text-2xl md:text-3xl lg:text-4xl fuente-handwritte font-bold my-4"
				>
					Agradecimientos
				</h2>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					1) Midudev & Cloudinary por la organización del evento.
				</p>
				<p
					class="text-sm sm:text-base md:text-lg fuente-urbanist font-extralight tracking-wider pt-2"
				>
					2) Comunidad dev y sus aportaciones constantes.
				</p>

				<button
					id="closeModalButton"
					class="text-xl fuente-handwritte font-bold pt-4 tracking-widest hover:animate-horizontal-vibration hover:animate-duration-fast hover:animate-iteration-count-infinite"
					>Cerrar</button
				>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">
	const animationSrc_1 = "/animations/castle_ghost.gif";
	const animationSrc_2 = "/animations/castle_ghost_2.gif";
	const gif = document.getElementById("ghostAnimation");
	const gif2 = document.getElementById("ghostAnimation2");
	const animatorContainer = document.getElementById("animatorContainer");
	const animatorContainer2 = document.getElementById("animatorContainer2");

	function changePage() {
		const gif = document.getElementById("ghostAnimation3");
		const title = document.getElementById("titleContent");
		title.classList.add(
			"animate-duration-slower",
			"animate-fade-out-down",
			"transition-all",
			"animate-duration-1000",
			"duration-1000",
		);
		gif.classList.remove("hidden");
		setTimeout(changePageStep2, 2000);
	}

	function changePageStep2() {
		window.location.href = "/personaje";
	}

	function playGif() {
		animatorContainer.classList.remove("hidden");
		animatorContainer2.classList.add("hidden");
		gif.src = animationSrc_1;
		setTimeout(playGif2, 10000);
	}

	function playGif2() {
		animatorContainer.classList.add("hidden");
		animatorContainer2.classList.remove("hidden");
		gif2.src = animationSrc_2;
	}

	document.addEventListener("DOMContentLoaded", function () {
		const img = document.getElementById("ghostAnimation");
		if (img) {
			fetch(img.src)
				.then((response) => response.blob())
				.then((blob) => {
					const url = URL.createObjectURL(blob);
					img.src = url;
					img.addEventListener("load", function () {
						setTimeout(() => {
							const canvas = document.createElement("canvas");
							canvas.width = img.naturalWidth;
							canvas.height = img.naturalHeight;
							canvas.getContext("2d").drawImage(img, 0, 0);
							img.src = canvas.toDataURL();
							URL.revokeObjectURL(url);
						}, 3800); // castle_ghost= 3800 castle_ghost_2= 3350
					});
				});
		}
	});
	document.addEventListener("DOMContentLoaded", function () {
		const img = document.getElementById("ghostAnimation2");
		if (img) {
			fetch(img.src)
				.then((response) => response.blob())
				.then((blob) => {
					const url = URL.createObjectURL(blob);
					img.src = url;
					img.addEventListener("load", function () {
						setTimeout(() => {
							const canvas = document.createElement("canvas");
							canvas.width = img.naturalWidth;
							canvas.height = img.naturalHeight;
							canvas.getContext("2d").drawImage(img, 0, 0);
							img.src = canvas.toDataURL();
							URL.revokeObjectURL(url);
						}, 3350); // castle_ghost= 3800 castle_ghost_2= 3350
					});
				});
		}
	});
</script>

<style>
	.modal {
		z-index: 500;
	}
</style>
